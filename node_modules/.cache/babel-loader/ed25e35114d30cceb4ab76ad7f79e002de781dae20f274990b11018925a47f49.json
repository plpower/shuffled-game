{"ast":null,"code":"var _jsxFileName = \"/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/buttonGroup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ButtonGroup.css\"; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonGroup = ({\n  words,\n  setGuess,\n  guess,\n  setIndex,\n  isVowel,\n  correct\n}) => {\n  _s();\n  console.log(words);\n  const [selectedButton, setSelectedButton] = useState(0);\n  const [wobble, setWobble] = React.useState(0);\n  const handleButtonClick = id => {\n    setSelectedButton(id === selectedButton ? 0 : id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-group-container\",\n    children: words.map((button, index) =>\n    /*#__PURE__*/\n    // !correct.includes(button.originalPosition) &&\n    _jsxDEV(\"button\", {\n      onClick: () => setWobble(1),\n      onAnimationEnd: () => setWobble(0)\n      //   wobble={wobble}\n      ,\n      className: `button ${index + 1 === selectedButton ? \"selected\" : \"\"}`,\n      disabled: correct.includes(button.originalPosition),\n      onClick: () => {\n        if (isVowel) {\n          setIndex(index);\n          setGuess({\n            ...guess,\n            v: button.originalPosition\n          });\n        } else {\n          setGuess({\n            ...guess,\n            c: button.originalPosition\n          });\n        }\n        handleButtonClick(index + 1);\n      },\n      children: button.word\n    }, index + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonGroup, \"BRhLL7QNGzccI0y7GJRlPcCGaKE=\");\n_c = ButtonGroup;\nexport default ButtonGroup;\nvar _c;\n$RefreshReg$(_c, \"ButtonGroup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ButtonGroup","words","setGuess","guess","setIndex","isVowel","correct","_s","console","log","selectedButton","setSelectedButton","wobble","setWobble","handleButtonClick","id","className","children","map","button","index","onClick","onAnimationEnd","disabled","includes","originalPosition","v","c","word","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/buttonGroup.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, useState } from \"react\";\nimport \"./ButtonGroup.css\"; // Import your CSS file for styling\nimport {Guess} from \"../game-engine/Guess\";\nimport { WordWithPosition } from \"../game-engine/shuffleObject\";\n\ninterface ButtonGroupProps {\n  words: WordWithPosition[];\n  setGuess: Dispatch<SetStateAction<Guess>>;\n  guess: Guess;\n  setIndex: Dispatch<SetStateAction<number>>;\n  idx: number;\n  isVowel: boolean;\n  correct: number[];\n}\n\nconst ButtonGroup: React.FC<ButtonGroupProps> = ({\n  words,\n  setGuess,\n  guess,\n  setIndex,\n  isVowel,\n  correct\n}) => {\n    console.log(words)\n  const [selectedButton, setSelectedButton] = useState(0);\n  const [wobble, setWobble] = React.useState(0);\n\n  const handleButtonClick = (id: number) => {\n    setSelectedButton(id === selectedButton ? 0 : id);\n  };\n\n  return (\n    <div className=\"button-group-container\">\n      {words.map((button, index) => (\n        // !correct.includes(button.originalPosition) &&\n        <button\n          key={index + 1}\n          onClick={() => setWobble(1)}\n          onAnimationEnd={() => setWobble(0)}\n        //   wobble={wobble}\n          className={`button ${index + 1 === selectedButton ? \"selected\" : \"\"}`}\n          disabled={correct.includes(button.originalPosition)}\n          onClick={() => {\n            if (isVowel) {\n              setIndex(index);\n              setGuess({ ...guess, v: button.originalPosition });\n            } else {\n              setGuess({ ...guess, c: button.originalPosition });\n            }\n            handleButtonClick(index + 1);\n          }}\n        >\n          {button.word}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA8BC,QAAQ,QAAQ,OAAO;AACjE,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAc5B,MAAMC,WAAuC,GAAGA,CAAC;EAC/CC,KAAK;EACLC,QAAQ;EACRC,KAAK;EACLC,QAAQ;EACRC,OAAO;EACPC;AACF,CAAC,KAAK;EAAAC,EAAA;EACFC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EACpB,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACe,MAAM,EAAEC,SAAS,CAAC,GAAGjB,KAAK,CAACC,QAAQ,CAAC,CAAC,CAAC;EAE7C,MAAMiB,iBAAiB,GAAIC,EAAU,IAAK;IACxCJ,iBAAiB,CAACI,EAAE,KAAKL,cAAc,GAAG,CAAC,GAAGK,EAAE,CAAC;EACnD,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpChB,KAAK,CAACiB,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK;IAAA;IACvB;IACArB,OAAA;MAEEsB,OAAO,EAAEA,CAAA,KAAMR,SAAS,CAAC,CAAC,CAAE;MAC5BS,cAAc,EAAEA,CAAA,KAAMT,SAAS,CAAC,CAAC;MACnC;MAAA;MACEG,SAAS,EAAG,UAASI,KAAK,GAAG,CAAC,KAAKV,cAAc,GAAG,UAAU,GAAG,EAAG,EAAE;MACtEa,QAAQ,EAAEjB,OAAO,CAACkB,QAAQ,CAACL,MAAM,CAACM,gBAAgB,CAAE;MACpDJ,OAAO,EAAEA,CAAA,KAAM;QACb,IAAIhB,OAAO,EAAE;UACXD,QAAQ,CAACgB,KAAK,CAAC;UACflB,QAAQ,CAAC;YAAE,GAAGC,KAAK;YAAEuB,CAAC,EAAEP,MAAM,CAACM;UAAiB,CAAC,CAAC;QACpD,CAAC,MAAM;UACLvB,QAAQ,CAAC;YAAE,GAAGC,KAAK;YAAEwB,CAAC,EAAER,MAAM,CAACM;UAAiB,CAAC,CAAC;QACpD;QACAX,iBAAiB,CAACM,KAAK,GAAG,CAAC,CAAC;MAC9B,CAAE;MAAAH,QAAA,EAEDE,MAAM,CAACS;IAAI,GAhBPR,KAAK,GAAG,CAAC;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiBR,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1CIP,WAAuC;AAAAiC,EAAA,GAAvCjC,WAAuC;AA4C7C,eAAeA,WAAW;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}