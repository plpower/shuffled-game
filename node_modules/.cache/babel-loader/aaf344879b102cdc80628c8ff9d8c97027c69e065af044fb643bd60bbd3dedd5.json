{"ast":null,"code":"const splitWordsIntoVowelsAndConsonants=words=>{const vowels=[];const consonants=[];words.forEach((word,index)=>{var _word$match,_word$match2;const vowelsInWord=((_word$match=word.match(/[aeiou]/gi))===null||_word$match===void 0?void 0:_word$match.join(\"\"))||\"\";const consonantsInWord=((_word$match2=word.match(/[^aeiou]/gi))===null||_word$match2===void 0?void 0:_word$match2.join(\"\"))||\"\";vowels.push({word:vowelsInWord,originalPosition:index});consonants.push({word:consonantsInWord,originalPosition:index});});return{vowels,consonants};};const shuffleVowels=vowels=>{const shuffledVowels=vowels.map(_ref=>{let{word,originalPosition}=_ref;return{word,originalPosition};});for(let i=shuffledVowels.length-1;i>0;i--){const j=Math.floor(Math.random()*(i+1));// Swap elements using destructuring assignment\n[shuffledVowels[i],shuffledVowels[j]]=[shuffledVowels[j],shuffledVowels[i]];}return shuffledVowels;};export{splitWordsIntoVowelsAndConsonants,shuffleVowels};","map":{"version":3,"names":["splitWordsIntoVowelsAndConsonants","words","vowels","consonants","forEach","word","index","_word$match","_word$match2","vowelsInWord","match","join","consonantsInWord","push","originalPosition","shuffleVowels","shuffledVowels","map","_ref","i","length","j","Math","floor","random"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/src/game-engine/shuffleObject.tsx"],"sourcesContent":["interface WordWithPosition {\n  word: string;\n  originalPosition: number;\n}\n\nconst splitWordsIntoVowelsAndConsonants = (\n  words: string[]\n): { vowels: WordWithPosition[]; consonants: WordWithPosition[] } => {\n  const vowels: WordWithPosition[] = [];\n  const consonants: WordWithPosition[] = [];\n\n  words.forEach((word, index) => {\n    const vowelsInWord = word.match(/[aeiou]/gi)?.join(\"\") || \"\";\n    const consonantsInWord = word.match(/[^aeiou]/gi)?.join(\"\") || \"\";\n\n    vowels.push({ word: vowelsInWord, originalPosition: index });\n    consonants.push({ word: consonantsInWord, originalPosition: index });\n  });\n\n  return { vowels, consonants };\n};\n\nconst shuffleVowels = (\n  vowels: WordWithPosition[]\n): WordWithPosition[] => {\n  const shuffledVowels: WordWithPosition[] = vowels.map(\n    ({ word, originalPosition }) => ({\n      word,\n      originalPosition,\n    })\n  );\n\n  for (let i = shuffledVowels.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n\n    // Swap elements using destructuring assignment\n    [shuffledVowels[i], shuffledVowels[j]] = [\n      shuffledVowels[j],\n      shuffledVowels[i],\n    ];\n  }\n\n  return shuffledVowels;\n};\n\nexport { splitWordsIntoVowelsAndConsonants, shuffleVowels };\nexport type { WordWithPosition };\n"],"mappings":"AAKA,KAAM,CAAAA,iCAAiC,CACrCC,KAAe,EACoD,CACnE,KAAM,CAAAC,MAA0B,CAAG,EAAE,CACrC,KAAM,CAAAC,UAA8B,CAAG,EAAE,CAEzCF,KAAK,CAACG,OAAO,CAAC,CAACC,IAAI,CAAEC,KAAK,GAAK,KAAAC,WAAA,CAAAC,YAAA,CAC7B,KAAM,CAAAC,YAAY,CAAG,EAAAF,WAAA,CAAAF,IAAI,CAACK,KAAK,CAAC,WAAW,CAAC,UAAAH,WAAA,iBAAvBA,WAAA,CAAyBI,IAAI,CAAC,EAAE,CAAC,GAAI,EAAE,CAC5D,KAAM,CAAAC,gBAAgB,CAAG,EAAAJ,YAAA,CAAAH,IAAI,CAACK,KAAK,CAAC,YAAY,CAAC,UAAAF,YAAA,iBAAxBA,YAAA,CAA0BG,IAAI,CAAC,EAAE,CAAC,GAAI,EAAE,CAEjET,MAAM,CAACW,IAAI,CAAC,CAAER,IAAI,CAAEI,YAAY,CAAEK,gBAAgB,CAAER,KAAM,CAAC,CAAC,CAC5DH,UAAU,CAACU,IAAI,CAAC,CAAER,IAAI,CAAEO,gBAAgB,CAAEE,gBAAgB,CAAER,KAAM,CAAC,CAAC,CACtE,CAAC,CAAC,CAEF,MAAO,CAAEJ,MAAM,CAAEC,UAAW,CAAC,CAC/B,CAAC,CAED,KAAM,CAAAY,aAAa,CACjBb,MAA0B,EACH,CACvB,KAAM,CAAAc,cAAkC,CAAGd,MAAM,CAACe,GAAG,CACnDC,IAAA,MAAC,CAAEb,IAAI,CAAES,gBAAiB,CAAC,CAAAI,IAAA,OAAM,CAC/Bb,IAAI,CACJS,gBACF,CAAC,EACH,CAAC,CAED,IAAK,GAAI,CAAAK,CAAC,CAAGH,cAAc,CAACI,MAAM,CAAG,CAAC,CAAED,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAE,CAAE,CAClD,KAAM,CAAAE,CAAC,CAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,EAAIL,CAAC,CAAG,CAAC,CAAC,CAAC,CAE7C;AACA,CAACH,cAAc,CAACG,CAAC,CAAC,CAAEH,cAAc,CAACK,CAAC,CAAC,CAAC,CAAG,CACvCL,cAAc,CAACK,CAAC,CAAC,CACjBL,cAAc,CAACG,CAAC,CAAC,CAClB,CACH,CAEA,MAAO,CAAAH,cAAc,CACvB,CAAC,CAED,OAAShB,iCAAiC,CAAEe,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}