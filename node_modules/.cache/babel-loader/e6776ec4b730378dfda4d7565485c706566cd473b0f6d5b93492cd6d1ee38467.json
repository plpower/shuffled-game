{"ast":null,"code":"import React,{useEffect,useState}from\"react\";import{AiFillCloseCircle,AiOutlineCloseCircle}from\"react-icons/ai\";import ButtonGroup from\"./components/buttonGroup\";import\"./App.css\";import NytButtonGroup from\"./components/checkGuess/checkGuessButtons\";import{shuffleVowels,splitWordsIntoVowelsAndConsonants}from\"./game-engine/shuffleObject\";import Cookies from\"js-cookie\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const words=[\"even\",\"lint\",\"scared\",\"pieces\",\"doubt\",\"dream\",\"howl\",\"poured\"];const App=()=>{const[idx,setIndex]=useState(-1);const[guess,setGuess]=useState({v:-1,c:-1});const[strikes,setStrikes]=useState([]);const[displayVowels,setDisplayVowels]=useState([]);const[displayConsonants,setDisplayConsonants]=useState([]);const[,setIsCorrect]=useState(false);const[correctpositions,setCorrectPsns]=useState([]);const[selectedVButton,setSelectedVButton]=useState(0);const[selectedCButton,setSelectedCButton]=useState(0);useEffect(()=>{const storedVowels=JSON.parse(localStorage.getItem(\"displayVowels\")||\"[]\");const storedConsonants=JSON.parse(localStorage.getItem(\"displayConsonants\")||\"[]\");if(storedVowels&&storedVowels[0]&&storedConsonants&&storedConsonants[0]){console.log(\"gettig from local storage\");setDisplayVowels(storedVowels);setDisplayConsonants(storedConsonants);const storedStrikes=JSON.parse(localStorage.getItem(\"strikes\")||\"[]\");setStrikes(storedStrikes);const storedcorrectpositions=JSON.parse(localStorage.getItem(\"correctpositions\")||\"[]\");setStrikes(storedcorrectpositions);}else{const{vowels,consonants}=splitWordsIntoVowelsAndConsonants(words);const shuffledVowels=shuffleVowels(vowels);setDisplayVowels(shuffledVowels);setDisplayConsonants(consonants);}},[]);useEffect(()=>{localStorage.setItem(\"strikes\",JSON.stringify(strikes));Cookies.set(\"strikes\",JSON.stringify(strikes),{expires:7});// alert(Cookies.get(\"strikes\"));\n},[strikes]);useEffect(()=>{localStorage.setItem(\"displayVowels\",JSON.stringify(displayVowels));},[displayVowels]);useEffect(()=>{localStorage.setItem(\"setDisplayConsonants\",JSON.stringify(displayConsonants));},[displayConsonants]);useEffect(()=>{localStorage.setItem(\"correctpositions\",JSON.stringify(correctpositions));},[correctpositions]);return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Shuffled\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Match the vowels and consonants\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[/*#__PURE__*/_jsx(ButtonGroup,{originalWords:words,words:displayVowels,setGuess:setGuess,guess:guess,setIndex:setIndex,idx:idx,isVowel:true,correct:correctpositions,selectedButton:selectedVButton,setSelectedButton:setSelectedVButton}),/*#__PURE__*/_jsx(ButtonGroup,{originalWords:words,words:displayConsonants,setGuess:setGuess,guess:guess,setIndex:setIndex,idx:idx,isVowel:false,correct:correctpositions,selectedButton:selectedCButton,setSelectedButton:setSelectedCButton})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"button-container\",children:[[...Array(6-strikes.length)].map((x,i)=>/*#__PURE__*/_jsx(AiOutlineCloseCircle,{style:{color:\"#686767\"}},i)),[...Array(strikes.length)].map((x,i)=>/*#__PURE__*/_jsx(AiFillCloseCircle,{style:{color:\"#686767\"}},i))]}),/*#__PURE__*/_jsx(NytButtonGroup,{words:words,guess:guess,idx:idx,setIsCorrect:setIsCorrect,strikes:strikes,setStrikes:setStrikes,correctPsns:correctpositions,setCorrectPsns:setCorrectPsns,displayVowels:displayVowels,setDisplayVowels:setDisplayVowels,displayConsonants:displayConsonants,setDisplayConsonants:setDisplayConsonants,selectedCButton:selectedCButton,setSelectedCButton:setSelectedCButton,selectedVButton:selectedVButton,setSelectedVButton:setSelectedVButton})]})});};export default App;","map":{"version":3,"names":["React","useEffect","useState","AiFillCloseCircle","AiOutlineCloseCircle","ButtonGroup","NytButtonGroup","shuffleVowels","splitWordsIntoVowelsAndConsonants","Cookies","jsx","_jsx","jsxs","_jsxs","words","App","idx","setIndex","guess","setGuess","v","c","strikes","setStrikes","displayVowels","setDisplayVowels","displayConsonants","setDisplayConsonants","setIsCorrect","correctpositions","setCorrectPsns","selectedVButton","setSelectedVButton","selectedCButton","setSelectedCButton","storedVowels","JSON","parse","localStorage","getItem","storedConsonants","console","log","storedStrikes","storedcorrectpositions","vowels","consonants","shuffledVowels","setItem","stringify","set","expires","className","children","originalWords","isVowel","correct","selectedButton","setSelectedButton","Array","length","map","x","i","style","color","correctPsns"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { AiFillCloseCircle, AiOutlineCloseCircle } from \"react-icons/ai\";\nimport ButtonGroup from \"./components/buttonGroup\";\nimport \"./App.css\";\nimport NytButtonGroup from \"./components/checkGuess/checkGuessButtons\";\nimport { Guess, GuessHistory } from \"./game-engine/Guess\";\nimport {\n  WordWithPosition,\n  shuffleVowels,\n  splitWordsIntoVowelsAndConsonants,\n} from \"./game-engine/shuffleObject\";\nimport getCorrectList from \"./game-engine/getCorrectList\";\nimport Cookies from \"js-cookie\";\n\nconst words = [\n  \"even\",\n  \"lint\",\n  \"scared\",\n  \"pieces\",\n  \"doubt\",\n  \"dream\",\n  \"howl\",\n  \"poured\",\n];\n\n\nconst App = () => {\n  const [idx, setIndex] = useState<number>(-1);\n  const [guess, setGuess] = useState<Guess>({ v: -1, c: -1 });\n  const [strikes, setStrikes] = useState<Guess[]>([]);\n  const [displayVowels, setDisplayVowels] = useState<WordWithPosition[]>([]);\n  const [displayConsonants, setDisplayConsonants] = useState<\n    WordWithPosition[]\n  >([]);\n  const [, setIsCorrect] = useState<boolean>(false);\n  const [correctpositions, setCorrectPsns] = useState<number[]>([]);\n  const [selectedVButton, setSelectedVButton] = useState<number>(0);\n  const [selectedCButton, setSelectedCButton] = useState<number>(0);\n\n  useEffect(() => {\n    const storedVowels = JSON.parse(\n      localStorage.getItem(\"displayVowels\") || \"[]\"\n    );\n    const storedConsonants = JSON.parse(\n      localStorage.getItem(\"displayConsonants\") || \"[]\"\n    );\n    if (storedVowels && storedVowels[0] && storedConsonants && storedConsonants[0]) {\n      console.log(\"gettig from local storage\")\n      setDisplayVowels(storedVowels);\n      setDisplayConsonants(storedConsonants);\n      const storedStrikes = JSON.parse(localStorage.getItem(\"strikes\") || \"[]\");\n      setStrikes(storedStrikes);\n      const storedcorrectpositions = JSON.parse(\n        localStorage.getItem(\"correctpositions\") || \"[]\"\n      );\n      setStrikes(storedcorrectpositions);\n    } else {\n      const { vowels, consonants } = splitWordsIntoVowelsAndConsonants(words);\n      const shuffledVowels = shuffleVowels(vowels);\n      setDisplayVowels(shuffledVowels);\n      setDisplayConsonants(consonants);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"strikes\", JSON.stringify(strikes));\n    Cookies.set(\"strikes\", JSON.stringify(strikes), { expires: 7 });\n    // alert(Cookies.get(\"strikes\"));\n  }, [strikes]);\n  useEffect(() => {\n    localStorage.setItem(\"displayVowels\", JSON.stringify(displayVowels));\n  }, [displayVowels]);\n  useEffect(() => {\n    localStorage.setItem(\n      \"setDisplayConsonants\",\n      JSON.stringify(displayConsonants)\n    );\n  }, [displayConsonants]);\n  useEffect(() => {\n    localStorage.setItem(\"correctpositions\", JSON.stringify(correctpositions));\n  }, [correctpositions]);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Shuffled</h1>\n        <p>Match the vowels and consonants</p>\n        <div className=\"button-container\">\n          <ButtonGroup\n            originalWords={words}\n            words={displayVowels}\n            setGuess={setGuess}\n            guess={guess}\n            setIndex={setIndex}\n            idx={idx}\n            isVowel={true}\n            correct={correctpositions}\n            selectedButton={selectedVButton}\n            setSelectedButton={setSelectedVButton}\n          />\n          <ButtonGroup\n            originalWords={words}\n            words={displayConsonants}\n            setGuess={setGuess}\n            guess={guess}\n            setIndex={setIndex}\n            idx={idx}\n            isVowel={false}\n            correct={correctpositions}\n            selectedButton={selectedCButton}\n            setSelectedButton={setSelectedCButton}\n          />\n        </div>\n        <div className=\"button-container\">\n          {[...Array(6 - strikes.length)].map((x, i) => (\n            <AiOutlineCloseCircle style={{ color: \"#686767\" }} key={i} />\n          ))}\n          {[...Array(strikes.length)].map((x, i) => (\n            <AiFillCloseCircle style={{ color: \"#686767\" }} key={i} />\n          ))}\n        </div>\n\n        {/* <button onClick={GetCookie()}></button> */}\n\n        <NytButtonGroup\n          words={words}\n          guess={guess}\n          idx={idx}\n          setIsCorrect={setIsCorrect}\n          strikes={strikes}\n          setStrikes={setStrikes}\n          correctPsns={correctpositions}\n          setCorrectPsns={setCorrectPsns}\n          displayVowels={displayVowels}\n          setDisplayVowels={setDisplayVowels}\n          displayConsonants={displayConsonants}\n          setDisplayConsonants={setDisplayConsonants}\n          selectedCButton={selectedCButton}\n          setSelectedCButton={setSelectedCButton}\n          selectedVButton={selectedVButton}\n          setSelectedVButton={setSelectedVButton}\n        />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}