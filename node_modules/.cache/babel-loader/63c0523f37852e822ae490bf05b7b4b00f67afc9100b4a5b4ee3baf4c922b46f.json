{"ast":null,"code":"var _jsxFileName = \"/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/buttonGroup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ButtonGroup.css\"; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonGroup = ({\n  words,\n  setGuess,\n  guess,\n  setIndex,\n  isVowel,\n  correct\n}) => {\n  _s();\n  const [selectedButton, setSelectedButton] = useState(0);\n  const handleButtonClick = id => {\n    setSelectedButton(id === selectedButton ? 0 : id);\n  };\n  function moveItemToTop(array, position) {\n    if (position < 0 || position >= array.length) {\n      // Invalid position, return the original array\n      return array;\n    }\n    const movedItem = array[position];\n    const newArray = array.filter((item, index) => index !== position);\n\n    // Insert the moved item at the beginning of the array\n    newArray.unshift(movedItem);\n    return newArray;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-group-container\",\n    children: words.map((button, index) =>\n    /*#__PURE__*/\n    // !correct.includes(button.originalPosition) &&\n    _jsxDEV(\"button\", {\n      //   onAnimationEnd={() => setWobble(0)}\n      className: `button ${index + 1 === selectedButton ? \"selected\" : \"\"}`,\n      disabled: correct.includes(button.originalPosition),\n      onClick: () => {\n        if (isVowel) {\n          setIndex(index);\n          setGuess({\n            ...guess,\n            v: button.originalPosition\n          });\n        } else {\n          setGuess({\n            ...guess,\n            c: button.originalPosition\n          });\n        }\n        handleButtonClick(index + 1);\n      },\n      children: button.word\n    }, index + 1, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonGroup, \"rtqy4Nny92MLv3yknRqwFPAC6tM=\");\n_c = ButtonGroup;\nexport default ButtonGroup;\nvar _c;\n$RefreshReg$(_c, \"ButtonGroup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ButtonGroup","words","setGuess","guess","setIndex","isVowel","correct","_s","selectedButton","setSelectedButton","handleButtonClick","id","moveItemToTop","array","position","length","movedItem","newArray","filter","item","index","unshift","className","children","map","button","disabled","includes","originalPosition","onClick","v","c","word","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/buttonGroup.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, useState } from \"react\";\nimport \"./ButtonGroup.css\"; // Import your CSS file for styling\nimport {Guess} from \"../game-engine/Guess\";\nimport { WordWithPosition } from \"../game-engine/shuffleObject\";\n\ninterface ButtonGroupProps {\n  words: WordWithPosition[];\n  setGuess: Dispatch<SetStateAction<Guess>>;\n  guess: Guess;\n  setIndex: Dispatch<SetStateAction<number>>;\n  idx: number;\n  isVowel: boolean;\n  correct: number[];\n}\n\nconst ButtonGroup: React.FC<ButtonGroupProps> = ({\n  words,\n  setGuess,\n  guess,\n  setIndex,\n  isVowel,\n  correct\n}) => {\n  const [selectedButton, setSelectedButton] = useState(0);\n\n  const handleButtonClick = (id: number) => {\n    setSelectedButton(id === selectedButton ? 0 : id);\n  };\n\n  function moveItemToTop<T>(\n    array: WordWithPosition[],\n    position: number\n  ): WordWithPosition[] {\n    if (position < 0 || position >= array.length) {\n      // Invalid position, return the original array\n      return array;\n    }\n\n    const movedItem = array[position];\n    const newArray = array.filter((item, index) => index !== position);\n\n    // Insert the moved item at the beginning of the array\n    newArray.unshift(movedItem);\n\n    return newArray;\n  }\n\n  return (\n    <div className=\"button-group-container\">\n      {words.map((button, index) => (\n        // !correct.includes(button.originalPosition) &&\n        <button\n          key={index + 1}\n        //   onAnimationEnd={() => setWobble(0)}\n          className={`button ${index + 1 === selectedButton ? \"selected\" : \"\"}`}\n          disabled={correct.includes(button.originalPosition)}\n          onClick={() => {\n            if (isVowel) {\n              setIndex(index);\n              setGuess({ ...guess, v: button.originalPosition });\n            } else {\n              setGuess({ ...guess, c: button.originalPosition });\n            }\n            handleButtonClick(index + 1);\n          }}\n        >\n          {button.word}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA8BC,QAAQ,QAAQ,OAAO;AACjE,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAc5B,MAAMC,WAAuC,GAAGA,CAAC;EAC/CC,KAAK;EACLC,QAAQ;EACRC,KAAK;EACLC,QAAQ;EACRC,OAAO;EACPC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMa,iBAAiB,GAAIC,EAAU,IAAK;IACxCF,iBAAiB,CAACE,EAAE,KAAKH,cAAc,GAAG,CAAC,GAAGG,EAAE,CAAC;EACnD,CAAC;EAED,SAASC,aAAaA,CACpBC,KAAyB,EACzBC,QAAgB,EACI;IACpB,IAAIA,QAAQ,GAAG,CAAC,IAAIA,QAAQ,IAAID,KAAK,CAACE,MAAM,EAAE;MAC5C;MACA,OAAOF,KAAK;IACd;IAEA,MAAMG,SAAS,GAAGH,KAAK,CAACC,QAAQ,CAAC;IACjC,MAAMG,QAAQ,GAAGJ,KAAK,CAACK,MAAM,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKA,KAAK,KAAKN,QAAQ,CAAC;;IAElE;IACAG,QAAQ,CAACI,OAAO,CAACL,SAAS,CAAC;IAE3B,OAAOC,QAAQ;EACjB;EAEA,oBACElB,OAAA;IAAKuB,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpCtB,KAAK,CAACuB,GAAG,CAAC,CAACC,MAAM,EAAEL,KAAK;IAAA;IACvB;IACArB,OAAA;MAEA;MACEuB,SAAS,EAAG,UAASF,KAAK,GAAG,CAAC,KAAKZ,cAAc,GAAG,UAAU,GAAG,EAAG,EAAE;MACtEkB,QAAQ,EAAEpB,OAAO,CAACqB,QAAQ,CAACF,MAAM,CAACG,gBAAgB,CAAE;MACpDC,OAAO,EAAEA,CAAA,KAAM;QACb,IAAIxB,OAAO,EAAE;UACXD,QAAQ,CAACgB,KAAK,CAAC;UACflB,QAAQ,CAAC;YAAE,GAAGC,KAAK;YAAE2B,CAAC,EAAEL,MAAM,CAACG;UAAiB,CAAC,CAAC;QACpD,CAAC,MAAM;UACL1B,QAAQ,CAAC;YAAE,GAAGC,KAAK;YAAE4B,CAAC,EAAEN,MAAM,CAACG;UAAiB,CAAC,CAAC;QACpD;QACAlB,iBAAiB,CAACU,KAAK,GAAG,CAAC,CAAC;MAC9B,CAAE;MAAAG,QAAA,EAEDE,MAAM,CAACO;IAAI,GAdPZ,KAAK,GAAG,CAAC;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAeR,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAxDIP,WAAuC;AAAAqC,EAAA,GAAvCrC,WAAuC;AA0D7C,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}