{"ast":null,"code":"var _jsxFileName = \"/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ButtonGroup from \"./components/buttonGroup\";\nimport \"./App.css\";\nimport NytButtonGroup from \"./components/checkGuess/checkGuessButtons\";\nimport { shuffleVowels, splitWordsIntoVowelsAndConsonants } from \"./game-engine/shuffleObject\";\nimport getCorrectList from \"./game-engine/getCorrectList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [\"even\", \"lint\", \"scared\", \"pieces\", \"doubt\", \"dream\", \"howl\", \"poured\"];\nconst App = () => {\n  _s();\n  const [idx, setIndex] = useState(-1);\n  const [guess, setGuess] = useState({\n    v: -1,\n    c: -1\n  });\n  const [strikes, setStrikes] = useState([]);\n  // const [guessHistory, setGuessHistory] = useState<GuessHistory>({});\n  const [displayVowels, setDisplayVowels] = useState([]);\n  const [displayConsonants, setDisplayConsonants] = useState([]);\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [correctpositions, setCorrectPsns] = useState([]);\n  // const correctpositions = [3];\n\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem(\"items\"));\n    if (items) {\n      setItems(items);\n    }\n    const {\n      vowels,\n      consonants\n    } = splitWordsIntoVowelsAndConsonants(words);\n    const shuffledVowels = shuffleVowels(vowels);\n    setDisplayVowels(shuffledVowels);\n    setDisplayConsonants(consonants);\n    // console.log(shuffledVowels, consonants);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"strikes\", JSON.stringify(strikes));\n  }, [strikes]);\n  useEffect(() => {\n    localStorage.setItem(\"strikes\", JSON.stringify(displayVowels));\n  }, [displayVowels]);\n  useEffect(() => {\n    localStorage.setItem(\"strikes\", JSON.stringify(displayConsonants));\n  }, [displayConsonants]);\n  useEffect(() => {\n    localStorage.setItem(\"strikes\", JSON.stringify(correctpositions));\n  }, [correctpositions]);\n  console.log(guess);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"found: \", getCorrectList(words, correctpositions)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"strikes: \", strikes.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select two buttons that match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        words: displayVowels,\n        setGuess: setGuess,\n        guess: guess,\n        setIndex: setIndex,\n        idx: idx,\n        isVowel: true,\n        correct: correctpositions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        words: displayConsonants,\n        setGuess: setGuess,\n        guess: guess,\n        setIndex: setIndex,\n        idx: idx,\n        isVowel: false,\n        correct: correctpositions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NytButtonGroup, {\n        words: words,\n        guess: guess,\n        idx: idx,\n        setIsCorrect: setIsCorrect,\n        strikes: strikes,\n        setStrikes: setStrikes,\n        correctPsns: correctpositions,\n        setCorrectPsns: setCorrectPsns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"XHaiBuvVO/PcbV9kcN3YgqxlT+A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ButtonGroup","NytButtonGroup","shuffleVowels","splitWordsIntoVowelsAndConsonants","getCorrectList","jsxDEV","_jsxDEV","words","App","_s","idx","setIndex","guess","setGuess","v","c","strikes","setStrikes","displayVowels","setDisplayVowels","displayConsonants","setDisplayConsonants","isCorrect","setIsCorrect","correctpositions","setCorrectPsns","items","JSON","parse","localStorage","getItem","setItems","vowels","consonants","shuffledVowels","setItem","stringify","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","isVowel","correct","correctPsns","_c","$RefreshReg$"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport ButtonGroup from \"./components/buttonGroup\";\nimport \"./App.css\";\nimport NytButtonGroup from \"./components/checkGuess/checkGuessButtons\";\nimport { Guess, GuessHistory } from \"./game-engine/Guess\";\nimport Shuffle from \"./game-engine/shuffler\";\nimport {\n  WordWithPosition,\n  shuffleVowels,\n  splitWordsIntoVowelsAndConsonants,\n} from \"./game-engine/shuffleObject\";\nimport getCorrectList from \"./game-engine/getCorrectList\";\n\nconst words = [\n  \"even\",\n  \"lint\",\n  \"scared\",\n  \"pieces\",\n  \"doubt\",\n  \"dream\",\n  \"howl\",\n  \"poured\",\n];\n\nconst App = () => {\n  const [idx, setIndex] = useState<number>(-1);\n  const [guess, setGuess] = useState<Guess>({ v: -1, c: -1 });\n  const [strikes, setStrikes] = useState<Guess[]>([]);\n  // const [guessHistory, setGuessHistory] = useState<GuessHistory>({});\n  const [displayVowels, setDisplayVowels] = useState<WordWithPosition[]>([]);\n  const [displayConsonants, setDisplayConsonants] = useState<\n    WordWithPosition[]\n  >([]);\n  const [isCorrect, setIsCorrect] = useState<boolean>(false);\n  const [correctpositions, setCorrectPsns] = useState<number[]>([]);\n  // const correctpositions = [3];\n\n  useEffect(() => {\n    const items = JSON.parse(localStorage.getItem(\"items\"));\n    if (items) {\n      setItems(items);\n    }\n    const { vowels, consonants } = splitWordsIntoVowelsAndConsonants(words);\n    const shuffledVowels = shuffleVowels(vowels);\n    setDisplayVowels(shuffledVowels);\n    setDisplayConsonants(consonants);\n    // console.log(shuffledVowels, consonants);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"strikes\", JSON.stringify(strikes));\n  }, [strikes]);\n  useEffect(() => {\n    localStorage.setItem(\"strikes\", JSON.stringify(displayVowels));\n  }, [displayVowels]);\n  useEffect(() => {\n    localStorage.setItem(\"strikes\", JSON.stringify(displayConsonants));\n  }, [displayConsonants]);\n  useEffect(() => {\n    localStorage.setItem(\"strikes\", JSON.stringify(correctpositions));\n  }, [correctpositions]);\n\n  console.log(guess);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>found: {getCorrectList(words, correctpositions)}</p>\n        <p>strikes: {strikes.length}</p>\n        <p>Select two buttons that match</p>\n        <ButtonGroup\n          words={displayVowels}\n          setGuess={setGuess}\n          guess={guess}\n          setIndex={setIndex}\n          idx={idx}\n          isVowel={true}\n          correct={correctpositions}\n        />\n        <ButtonGroup\n          words={displayConsonants}\n          setGuess={setGuess}\n          guess={guess}\n          setIndex={setIndex}\n          idx={idx}\n          isVowel={false}\n          correct={correctpositions}\n        />\n        <NytButtonGroup\n          words={words}\n          guess={guess}\n          idx={idx}\n          setIsCorrect={setIsCorrect}\n          strikes={strikes}\n          setStrikes={setStrikes}\n          correctPsns={correctpositions}\n          setCorrectPsns={setCorrectPsns}\n        />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}