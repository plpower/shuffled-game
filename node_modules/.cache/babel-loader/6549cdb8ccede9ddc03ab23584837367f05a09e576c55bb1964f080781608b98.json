{"ast":null,"code":"const shuffleWordObjectsWithPositions = wordObjects => {\n  const wordObjectsWithPositions = wordObjects.map(({\n    word,\n    position\n  }) => ({\n    word,\n    originalPosition: position,\n    newPosition: position\n  }));\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex > 0) {}\n  for (let i = wordObjectsWithPositions.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n\n    // Swap elements using destructuring assignment\n    [wordObjectsWithPositions[i], wordObjectsWithPositions[j]] = [wordObjectsWithPositions[j], wordObjectsWithPositions[i]];\n  }\n  return wordObjectsWithPositions;\n};\nexport { shuffleWordObjectsWithPositions };\n\n// // Example usage:\n// const originalWordObjects = [\n//   { word: \"apple\", position: 0 },\n//   { word: \"banana\", position: 1 },\n//   { word: \"cherry\", position: 2 },\n//   { word: \"date\", position: 3 },\n//   { word: \"elderberry\", position: 4 },\n// ];\n\n// const shuffledWordObjectsWithPositions =\n//   shuffleWordObjectsWithPositions(originalWordObjects);\n\n// console.log(\"Original Word Objects:\", originalWordObjects);\n// console.log(\n//   \"Shuffled Word Objects with Positions:\",\n//   shuffledWordObjectsWithPositions\n// );","map":{"version":3,"names":["shuffleWordObjectsWithPositions","wordObjects","wordObjectsWithPositions","map","word","position","originalPosition","newPosition","currentIndex","array","length","randomIndex","i","j","Math","floor","random"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/game-engine/shuffleObject.tsx"],"sourcesContent":["interface WordObjectWithPositions {\n  word: string;\n  originalPosition: number;\n  newPosition: number;\n}\n\nconst shuffleWordObjectsWithPositions = (\n  wordObjects: { word: string; position: number }[]\n): WordObjectWithPositions[] => {\n  const wordObjectsWithPositions: WordObjectWithPositions[] = wordObjects.map(\n    ({ word, position }) => ({\n      word,\n      originalPosition: position,\n      newPosition: position,\n    })\n  );\n\n  let currentIndex = array.length,\n    randomIndex;\n\n  // While there remain elements to shuffle.\n  while (currentIndex > 0) {\n    \n  }\n\n  for (let i = wordObjectsWithPositions.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n\n    // Swap elements using destructuring assignment\n    [wordObjectsWithPositions[i], wordObjectsWithPositions[j]] = [\n      wordObjectsWithPositions[j],\n      wordObjectsWithPositions[i],\n    ];\n  }\n\n  return wordObjectsWithPositions;\n};\n\nexport { shuffleWordObjectsWithPositions };\n\n// // Example usage:\n// const originalWordObjects = [\n//   { word: \"apple\", position: 0 },\n//   { word: \"banana\", position: 1 },\n//   { word: \"cherry\", position: 2 },\n//   { word: \"date\", position: 3 },\n//   { word: \"elderberry\", position: 4 },\n// ];\n\n// const shuffledWordObjectsWithPositions =\n//   shuffleWordObjectsWithPositions(originalWordObjects);\n\n// console.log(\"Original Word Objects:\", originalWordObjects);\n// console.log(\n//   \"Shuffled Word Objects with Positions:\",\n//   shuffledWordObjectsWithPositions\n// );\n"],"mappings":"AAMA,MAAMA,+BAA+B,GACnCC,WAAiD,IACnB;EAC9B,MAAMC,wBAAmD,GAAGD,WAAW,CAACE,GAAG,CACzE,CAAC;IAAEC,IAAI;IAAEC;EAAS,CAAC,MAAM;IACvBD,IAAI;IACJE,gBAAgB,EAAED,QAAQ;IAC1BE,WAAW,EAAEF;EACf,CAAC,CACH,CAAC;EAED,IAAIG,YAAY,GAAGC,KAAK,CAACC,MAAM;IAC7BC,WAAW;;EAEb;EACA,OAAOH,YAAY,GAAG,CAAC,EAAE,CAEzB;EAEA,KAAK,IAAII,CAAC,GAAGV,wBAAwB,CAACQ,MAAM,GAAG,CAAC,EAAEE,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC5D,MAAMC,CAAC,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,IAAIJ,CAAC,GAAG,CAAC,CAAC,CAAC;;IAE7C;IACA,CAACV,wBAAwB,CAACU,CAAC,CAAC,EAAEV,wBAAwB,CAACW,CAAC,CAAC,CAAC,GAAG,CAC3DX,wBAAwB,CAACW,CAAC,CAAC,EAC3BX,wBAAwB,CAACU,CAAC,CAAC,CAC5B;EACH;EAEA,OAAOV,wBAAwB;AACjC,CAAC;AAED,SAASF,+BAA+B;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}