{"ast":null,"code":"var _jsxFileName = \"/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ButtonGroup from \"./components/buttonGroup\";\nimport \"./App.css\";\nimport NytButtonGroup from \"./components/checkGuess/checkGuessButtons\";\nimport Shuffle from \"./game-engine/shuffler\";\nimport { splitWordsIntoVowelsAndConsonants } from \"./game-engine/shuffleObject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [\"even\", \"lint\", \"scared\", \"pieces\", \"doubt\", \"dream\", \"howl\", \"poured\"];\nconst originalWordObjects = [{\n  word: \"even\",\n  position: 0\n}, {\n  word: \"lint\",\n  position: 1\n}, {\n  word: \"scared\",\n  position: 2\n}, {\n  word: \"doubt\",\n  position: 3\n}, {\n  word: \"poured\",\n  position: 4\n}];\nconst App = () => {\n  _s();\n  const [idx, setIndex] = useState(-1);\n  const [guess, setGuess] = useState({\n    v: \"\",\n    c: \"\"\n  });\n  const [strikes, setStrikes] = useState(0);\n  // const [guessHistory, setGuessHistory] = useState<GuessHistory>({});\n  const [vowels, setVowels] = useState([]);\n  const [consonants, setConsonants] = useState([]);\n  const [isCorrect, setIsCorrect] = useState(false);\n  useEffect(() => {\n    const shuffledVowels = Shuffle(words.map(getVowels));\n    setVowels(shuffledVowels);\n    const consonantsArray = words.map(getConsonants);\n    setConsonants(consonantsArray);\n    const {\n      vowels,\n      consonants\n    } = splitWordsIntoVowelsAndConsonants(words);\n    // const shuffledVowel = shuffleWordObjectsWithPositions(\n    //     resultWithSplit[vowels]\n    //   );\n    const shuffleVowels = vowels => {\n      const shuffledVowels = vowels.map(({\n        word,\n        originalPosition\n      }) => ({\n        word,\n        originalPosition,\n        newPosition: originalPosition\n      }));\n      for (let i = shuffledVowels.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n\n        // Swap elements using destructuring assignment\n        [shuffledVowels[i], shuffledVowels[j]] = [shuffledVowels[j], shuffledVowels[i]];\n      }\n      return shuffledVowels;\n    };\n  }, []);\n  function getVowels(str) {\n    return str.match(/[aeiou]/gi).join(\"\");\n  }\n  function getConsonants(str) {\n    return str.match(/[^aeiou]/gi).join(\"\");\n  }\n  console.log(guess);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Select two buttons that match\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        words: vowels,\n        setGuess: setGuess,\n        guess: guess,\n        setIndex: setIndex,\n        idx: idx,\n        isVowel: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        words: consonants,\n        setGuess: setGuess,\n        guess: guess,\n        setIndex: setIndex,\n        idx: idx,\n        isVowel: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NytButtonGroup, {\n        words: words,\n        guess: guess,\n        idx: idx,\n        setIsCorrect: setIsCorrect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"O274yjeDf5PPzM9E9IRSsru/9vw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ButtonGroup","NytButtonGroup","Shuffle","splitWordsIntoVowelsAndConsonants","jsxDEV","_jsxDEV","words","originalWordObjects","word","position","App","_s","idx","setIndex","guess","setGuess","v","c","strikes","setStrikes","vowels","setVowels","consonants","setConsonants","isCorrect","setIsCorrect","shuffledVowels","map","getVowels","consonantsArray","getConsonants","shuffleVowels","originalPosition","newPosition","i","length","j","Math","floor","random","str","match","join","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isVowel","_c","$RefreshReg$"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport ButtonGroup from \"./components/buttonGroup\";\nimport \"./App.css\";\nimport NytButtonGroup from \"./components/checkGuess/checkGuessButtons\";\nimport { Guess, GuessHistory } from \"./game-engine/Guess\";\nimport Shuffle from \"./game-engine/shuffler\";\nimport { shuffleWordObjectsWithPositions, splitWordsIntoVowelsAndConsonants } from \"./game-engine/shuffleObject\";\n\nconst words = [\n  \"even\",\n  \"lint\",\n  \"scared\",\n  \"pieces\",\n  \"doubt\",\n  \"dream\",\n  \"howl\",\n  \"poured\",\n];\n\nconst originalWordObjects = [\n  { word: \"even\", position: 0 },\n  { word: \"lint\", position: 1 },\n  { word: \"scared\", position: 2 },\n  { word: \"doubt\", position: 3 },\n  { word: \"poured\", position: 4 },\n];\n\nconst App = () => {\n  const [idx, setIndex] = useState<number>(-1);\n  const [guess, setGuess] = useState<Guess>({ v: \"\", c: \"\" });\n  const [strikes, setStrikes] = useState<number>(0);\n  // const [guessHistory, setGuessHistory] = useState<GuessHistory>({});\n  const [vowels, setVowels] = useState<string[]>([]);\n  const [consonants, setConsonants] = useState<string[]>([]);\n  const [isCorrect, setIsCorrect] = useState<boolean>(false);\n\n  useEffect(() => {\n    const shuffledVowels = Shuffle(words.map(getVowels));\n    setVowels(shuffledVowels);\n    const consonantsArray = words.map(getConsonants);\n    setConsonants(consonantsArray);\n    \n    const {vowels, consonants} =\n      splitWordsIntoVowelsAndConsonants(words);\n    // const shuffledVowel = shuffleWordObjectsWithPositions(\n    //     resultWithSplit[vowels]\n    //   );\n    const shuffleVowels = (vowels: WordWithPosition[]): ShuffledWordObjectWithPosition[] => {\n  const shuffledVowels: ShuffledWordObjectWithPosition[] = vowels.map(\n    ({ word, originalPosition }) => ({\n      word,\n      originalPosition,\n      newPosition: originalPosition,\n    })\n  );\n\n  for (let i = shuffledVowels.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n\n    // Swap elements using destructuring assignment\n    [shuffledVowels[i], shuffledVowels[j]] = [\n      shuffledVowels[j],\n      shuffledVowels[i],\n    ];\n  }\n\n  return shuffledVowels;\n};\n\n  }, []);\n\n  function getVowels(str: string): string {\n    return str.match(/[aeiou]/gi)!.join(\"\");\n  }\n\n  function getConsonants(str: string): string {\n    return str.match(/[^aeiou]/gi)!.join(\"\");\n  }\n\n  console.log(guess);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>Select two buttons that match</p>\n        <ButtonGroup\n          words={vowels}\n          setGuess={setGuess}\n          guess={guess}\n          setIndex={setIndex}\n          idx={idx}\n          isVowel={true}\n        />\n        <ButtonGroup\n          words={consonants}\n          setGuess={setGuess}\n          guess={guess}\n          setIndex={setIndex}\n          idx={idx}\n          isVowel={false}\n        />\n        {/* <ButtonGroup words={consonants} onVowelSelect={onVowelSelect} /> */}\n        <NytButtonGroup\n          words={words}\n          guess={guess}\n          idx={idx}\n          setIsCorrect={setIsCorrect}\n        />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}