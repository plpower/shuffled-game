{"ast":null,"code":"var _jsxFileName = \"/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/buttonGroup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ButtonGroup.css\"; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonGroup = ({\n  words,\n  setGuess,\n  guess,\n  setIndex,\n  isVowel,\n  correct\n}) => {\n  _s();\n  console.log(words);\n  const [selectedButton, setSelectedButton] = useState(0);\n  const handleButtonClick = id => {\n    setSelectedButton(id === selectedButton ? 0 : id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-group-container\",\n    children: words.map((button, index) => {\n      if (correct.includes(button.originalPosition)) {\n        /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `button ${index + 1 === selectedButton ? \"selected\" : \"\"}`,\n          disabled: correct.includes(button.originalPosition),\n          onClick: () => {\n            if (isVowel) {\n              setIndex(index);\n              setGuess({\n                ...guess,\n                v: button.originalPosition\n              });\n            } else {\n              setGuess({\n                ...guess,\n                c: button.originalPosition\n              });\n            }\n            handleButtonClick(index + 1);\n          },\n          children: button.word\n        }, index + 1, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this);\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonGroup, \"rtqy4Nny92MLv3yknRqwFPAC6tM=\");\n_c = ButtonGroup;\nexport default ButtonGroup;\nvar _c;\n$RefreshReg$(_c, \"ButtonGroup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ButtonGroup","words","setGuess","guess","setIndex","isVowel","correct","_s","console","log","selectedButton","setSelectedButton","handleButtonClick","id","className","children","map","button","index","includes","originalPosition","disabled","onClick","v","c","word","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/buttonGroup.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, useState } from \"react\";\nimport \"./ButtonGroup.css\"; // Import your CSS file for styling\nimport {Guess} from \"../game-engine/Guess\";\nimport { WordWithPosition } from \"../game-engine/shuffleObject\";\n\ninterface ButtonGroupProps {\n  words: WordWithPosition[];\n  setGuess: Dispatch<SetStateAction<Guess>>;\n  guess: Guess;\n  setIndex: Dispatch<SetStateAction<number>>;\n  idx: number;\n  isVowel: boolean;\n  correct: number[];\n}\n\nconst ButtonGroup: React.FC<ButtonGroupProps> = ({\n  words,\n  setGuess,\n  guess,\n  setIndex,\n  isVowel,\n  correct\n}) => {\n    console.log(words)\n  const [selectedButton, setSelectedButton] = useState(0);\n\n  const handleButtonClick = (id: number) => {\n    setSelectedButton(id === selectedButton ? 0 : id);\n  };\n\n  return (\n    <div className=\"button-group-container\">\n      {words.map((button, index) => {\n        if (correct.includes(button.originalPosition)) {\n        <button\n          key={index + 1}\n          className={`button ${index + 1 === selectedButton ? \"selected\" : \"\"}`}\n          disabled={correct.includes(button.originalPosition)}\n          onClick={() => {\n            if (isVowel) {\n              setIndex(index);\n              setGuess({ ...guess, v: button.originalPosition });\n            } else {\n              setGuess({ ...guess, c: button.originalPosition });\n            }\n            handleButtonClick(index + 1);\n          }}\n        >\n          {button.word}\n        </button>\n        }\n\n})}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAA8BC,QAAQ,QAAQ,OAAO;AACjE,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAc5B,MAAMC,WAAuC,GAAGA,CAAC;EAC/CC,KAAK;EACLC,QAAQ;EACRC,KAAK;EACLC,QAAQ;EACRC,OAAO;EACPC;AACF,CAAC,KAAK;EAAAC,EAAA;EACFC,OAAO,CAACC,GAAG,CAACR,KAAK,CAAC;EACpB,MAAM,CAACS,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMe,iBAAiB,GAAIC,EAAU,IAAK;IACxCF,iBAAiB,CAACE,EAAE,KAAKH,cAAc,GAAG,CAAC,GAAGG,EAAE,CAAC;EACnD,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpCd,KAAK,CAACe,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,KAAK;MAC5B,IAAIZ,OAAO,CAACa,QAAQ,CAACF,MAAM,CAACG,gBAAgB,CAAC,EAAE;QAC/C,aAAArB,OAAA;UAEEe,SAAS,EAAG,UAASI,KAAK,GAAG,CAAC,KAAKR,cAAc,GAAG,UAAU,GAAG,EAAG,EAAE;UACtEW,QAAQ,EAAEf,OAAO,CAACa,QAAQ,CAACF,MAAM,CAACG,gBAAgB,CAAE;UACpDE,OAAO,EAAEA,CAAA,KAAM;YACb,IAAIjB,OAAO,EAAE;cACXD,QAAQ,CAACc,KAAK,CAAC;cACfhB,QAAQ,CAAC;gBAAE,GAAGC,KAAK;gBAAEoB,CAAC,EAAEN,MAAM,CAACG;cAAiB,CAAC,CAAC;YACpD,CAAC,MAAM;cACLlB,QAAQ,CAAC;gBAAE,GAAGC,KAAK;gBAAEqB,CAAC,EAAEP,MAAM,CAACG;cAAiB,CAAC,CAAC;YACpD;YACAR,iBAAiB,CAACM,KAAK,GAAG,CAAC,CAAC;UAC9B,CAAE;UAAAH,QAAA,EAEDE,MAAM,CAACQ;QAAI,GAbPP,KAAK,GAAG,CAAC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcR,CAAC;MACT;IAER,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO,CAAC;AAEV,CAAC;AAACtB,EAAA,CAxCIP,WAAuC;AAAA8B,EAAA,GAAvC9B,WAAuC;AA0C7C,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}