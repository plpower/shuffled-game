{"ast":null,"code":"var _jsxFileName = \"/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport ButtonGroup from \"./components/buttonGroup\";\nimport \"./App.css\";\nimport NytButtonGroup from \"./components/checkGuess/checkGuessButtons\";\nimport { shuffleVowels, splitWordsIntoVowelsAndConsonants } from \"./game-engine/shuffleObject\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst words = [\"even\", \"lint\", \"scared\", \"pieces\", \"doubt\", \"dream\", \"howl\", \"poured\"];\nconst App = () => {\n  _s();\n  const [idx, setIndex] = useState(-1);\n  const [guess, setGuess] = useState({\n    v: -1,\n    c: -1\n  });\n  const [strikes, setStrikes] = useState([]);\n  const [displayVowels, setDisplayVowels] = useState([]);\n  const [displayConsonants, setDisplayConsonants] = useState([]);\n  const [, setIsCorrect] = useState(false);\n  const [correctpositions, setCorrectPsns] = useState([]);\n  const [selectedVButton, setSelectedVButton] = useState(0);\n  const [selectedCButton, setSelectedCButton] = useState(0);\n  useEffect(() => {\n    const storedVowels = JSON.parse(localStorage.getItem(\"displayVowels\") || \"[]\");\n    const storedConsonants = JSON.parse(localStorage.getItem(\"displayConsonants\") || \"[]\");\n    if (storedVowels && storedVowels[0] && storedConsonants && storedConsonants[0]) {\n      setDisplayVowels(storedVowels);\n      setDisplayConsonants(storedConsonants);\n      const storedStrikes = JSON.parse(localStorage.getItem(\"strikes\") || \"[]\");\n      setStrikes(storedStrikes);\n      const storedcorrectpositions = JSON.parse(localStorage.getItem(\"correctpositions\") || \"[]\");\n      setStrikes(storedcorrectpositions);\n    } else {\n      const {\n        vowels,\n        consonants\n      } = splitWordsIntoVowelsAndConsonants(words);\n      const shuffledVowels = shuffleVowels(vowels);\n      setDisplayVowels(shuffledVowels);\n      setDisplayConsonants(consonants);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem(\"strikes\", JSON.stringify(strikes));\n  }, [strikes]);\n  useEffect(() => {\n    localStorage.setItem(\"displayVowels\", JSON.stringify(displayVowels));\n  }, [displayVowels]);\n  useEffect(() => {\n    localStorage.setItem(\"setDisplayConsonants\", JSON.stringify(displayConsonants));\n  }, [displayConsonants]);\n  useEffect(() => {\n    localStorage.setItem(\"correctpositions\", JSON.stringify(correctpositions));\n  }, [correctpositions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"strikes: \", strikes.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Match the vowels and consonants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n          originalWords: words,\n          words: displayVowels,\n          setGuess: setGuess,\n          guess: guess,\n          setIndex: setIndex,\n          idx: idx,\n          isVowel: true,\n          correct: correctpositions,\n          selectedButton: selectedVButton,\n          setSelectedButton: setSelectedVButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          originalWords: words,\n          words: displayConsonants,\n          setGuess: setGuess,\n          guess: guess,\n          setIndex: setIndex,\n          idx: idx,\n          isVowel: false,\n          correct: correctpositions,\n          selectedButton: selectedCButton,\n          setSelectedButton: setSelectedCButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NytButtonGroup, {\n        words: words,\n        guess: guess,\n        idx: idx,\n        setIsCorrect: setIsCorrect,\n        strikes: strikes,\n        setStrikes: setStrikes,\n        correctPsns: correctpositions,\n        setCorrectPsns: setCorrectPsns,\n        displayVowels: displayVowels,\n        setDisplayVowels: setDisplayVowels,\n        displayConsonants: displayConsonants,\n        setDisplayConsonants: setDisplayConsonants,\n        selectedCButton: selectedCButton,\n        setSelectedCButton: setSelectedCButton,\n        selectedVButton: selectedVButton,\n        setSelectedVButton: setSelectedVButton\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"JoZXdV/T24UUTUa8j3aclG2DrVE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ButtonGroup","NytButtonGroup","shuffleVowels","splitWordsIntoVowelsAndConsonants","jsxDEV","_jsxDEV","words","App","_s","idx","setIndex","guess","setGuess","v","c","strikes","setStrikes","displayVowels","setDisplayVowels","displayConsonants","setDisplayConsonants","setIsCorrect","correctpositions","setCorrectPsns","selectedVButton","setSelectedVButton","selectedCButton","setSelectedCButton","storedVowels","JSON","parse","localStorage","getItem","storedConsonants","storedStrikes","storedcorrectpositions","vowels","consonants","shuffledVowels","setItem","stringify","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","originalWords","isVowel","correct","selectedButton","setSelectedButton","correctPsns","_c","$RefreshReg$"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport ButtonGroup from \"./components/buttonGroup\";\nimport \"./App.css\";\nimport NytButtonGroup from \"./components/checkGuess/checkGuessButtons\";\nimport { Guess, GuessHistory } from \"./game-engine/Guess\";\nimport {\n  WordWithPosition,\n  shuffleVowels,\n  splitWordsIntoVowelsAndConsonants,\n} from \"./game-engine/shuffleObject\";\nimport getCorrectList from \"./game-engine/getCorrectList\";\n\nconst words = [\n  \"even\",\n  \"lint\",\n  \"scared\",\n  \"pieces\",\n  \"doubt\",\n  \"dream\",\n  \"howl\",\n  \"poured\",\n];\n\nconst App = () => {\n  const [idx, setIndex] = useState<number>(-1);\n  const [guess, setGuess] = useState<Guess>({ v: -1, c: -1 });\n  const [strikes, setStrikes] = useState<Guess[]>([]);\n  const [displayVowels, setDisplayVowels] = useState<WordWithPosition[]>([]);\n  const [displayConsonants, setDisplayConsonants] = useState<\n    WordWithPosition[]\n  >([]);\n  const [, setIsCorrect] = useState<boolean>(false);\n  const [correctpositions, setCorrectPsns] = useState<number[]>([]);\n  const [selectedVButton, setSelectedVButton] = useState<number>(0);\n  const [selectedCButton, setSelectedCButton] = useState<number>(0);\n\n  useEffect(() => {\n    const storedVowels = JSON.parse(\n      localStorage.getItem(\"displayVowels\") || \"[]\"\n    );\n    const storedConsonants = JSON.parse(\n      localStorage.getItem(\"displayConsonants\") || \"[]\"\n    );\n    if (storedVowels && storedVowels[0] && storedConsonants && storedConsonants[0]) {\n      setDisplayVowels(storedVowels);\n      setDisplayConsonants(storedConsonants);\n      const storedStrikes = JSON.parse(localStorage.getItem(\"strikes\") || \"[]\");\n      setStrikes(storedStrikes);\n      const storedcorrectpositions = JSON.parse(\n        localStorage.getItem(\"correctpositions\") || \"[]\"\n      );\n      setStrikes(storedcorrectpositions);\n    } else {\n      const { vowels, consonants } = splitWordsIntoVowelsAndConsonants(words);\n      const shuffledVowels = shuffleVowels(vowels);\n      setDisplayVowels(shuffledVowels);\n      setDisplayConsonants(consonants);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"strikes\", JSON.stringify(strikes));\n  }, [strikes]);\n  useEffect(() => {\n    localStorage.setItem(\"displayVowels\", JSON.stringify(displayVowels));\n  }, [displayVowels]);\n  useEffect(() => {\n    localStorage.setItem(\n      \"setDisplayConsonants\",\n      JSON.stringify(displayConsonants)\n    );\n  }, [displayConsonants]);\n  useEffect(() => {\n    localStorage.setItem(\"correctpositions\", JSON.stringify(correctpositions));\n  }, [correctpositions]);\n\n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {/* <p>found: {getCorrectList(words, correctpositions)}</p> */}\n        <p>strikes: {strikes.length}</p>\n        <p>Match the vowels and consonants</p>\n        <div >\n          <ButtonGroup\n            originalWords={words}\n            words={displayVowels}\n            setGuess={setGuess}\n            guess={guess}\n            setIndex={setIndex}\n            idx={idx}\n            isVowel={true}\n            correct={correctpositions}\n            selectedButton={selectedVButton}\n            setSelectedButton={setSelectedVButton}\n          />\n          <ButtonGroup\n            originalWords={words}\n            words={displayConsonants}\n            setGuess={setGuess}\n            guess={guess}\n            setIndex={setIndex}\n            idx={idx}\n            isVowel={false}\n            correct={correctpositions}\n            selectedButton={selectedCButton}\n            setSelectedButton={setSelectedCButton}\n          />\n        </div>\n        <NytButtonGroup\n          words={words}\n          guess={guess}\n          idx={idx}\n          setIsCorrect={setIsCorrect}\n          strikes={strikes}\n          setStrikes={setStrikes}\n          correctPsns={correctpositions}\n          setCorrectPsns={setCorrectPsns}\n          displayVowels={displayVowels}\n          setDisplayVowels={setDisplayVowels}\n          displayConsonants={displayConsonants}\n          setDisplayConsonants={setDisplayConsonants}\n          selectedCButton={selectedCButton}\n          setSelectedCButton={setSelectedCButton}\n          selectedVButton={selectedVButton}\n          setSelectedVButton={setSelectedVButton}\n        />\n      </header>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}