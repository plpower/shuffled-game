{"ast":null,"code":"var _jsxFileName = \"/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/buttonGroup.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ButtonGroup.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ButtonGroup = ({\n  words\n}) => {\n  _s();\n  const [selectedButton, setSelectedButton] = useState(0);\n  const buttonData = [{\n    id: 1,\n    label: \"Button 1\"\n  }, {\n    id: 2,\n    label: \"Button 2\"\n  }, {\n    id: 3,\n    label: \"Button 3\"\n  }\n  // Add more buttons as needed\n  ];\n  const handleButtonClick = id => {\n    setSelectedButton(id === selectedButton ? 0 : id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-group-container\",\n    children: buttonData.map(button => /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `button ${button.id === selectedButton ? \"selected\" : \"\"}`,\n      onClick: () => handleButtonClick(button.id),\n      children: button.label\n    }, button.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(ButtonGroup, \"rtqy4Nny92MLv3yknRqwFPAC6tM=\");\n_c = ButtonGroup;\nexport default ButtonGroup;\nvar _c;\n$RefreshReg$(_c, \"ButtonGroup\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ButtonGroup","words","_s","selectedButton","setSelectedButton","buttonData","id","label","handleButtonClick","className","children","map","button","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/buttonGroup.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './ButtonGroup.css'; // Import your CSS file for styling\n\ninterface ButtonGroupProps {\n  words: string[]\n  onCheck: () => void;\n  onClear: () => void;\n  isDisabled: boolean; // Add the new prop\n}\n\nconst ButtonGroup: React.FC<ButtonGroupProps> = ({words}) => {\n  const [selectedButton, setSelectedButton] = useState(0);\n\n  const buttonData = [\n    { id: 1, label: \"Button 1\" },\n    { id: 2, label: \"Button 2\" },\n    { id: 3, label: \"Button 3\" },\n    // Add more buttons as needed\n  ];\n\n  const handleButtonClick = (id: number) => {\n    setSelectedButton(id === selectedButton ? 0 : id);\n  };\n\n  return (\n    <div className=\"button-group-container\">\n      {buttonData.map((button) => (\n        <button\n          key={button.id}\n          className={`button ${button.id === selectedButton ? \"selected\" : \"\"}`}\n          onClick={() => handleButtonClick(button.id)}\n        >\n          {button.label}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAS5B,MAAMC,WAAuC,GAAGA,CAAC;EAACC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMQ,UAAU,GAAG,CACjB;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAW,CAAC,EAC5B;IAAED,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAW,CAAC,EAC5B;IAAED,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE;EAAW;EAC3B;EAAA,CACD;EAED,MAAMC,iBAAiB,GAAIF,EAAU,IAAK;IACxCF,iBAAiB,CAACE,EAAE,KAAKH,cAAc,GAAG,CAAC,GAAGG,EAAE,CAAC;EACnD,CAAC;EAED,oBACEP,OAAA;IAAKU,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpCL,UAAU,CAACM,GAAG,CAAEC,MAAM,iBACrBb,OAAA;MAEEU,SAAS,EAAG,UAASG,MAAM,CAACN,EAAE,KAAKH,cAAc,GAAG,UAAU,GAAG,EAAG,EAAE;MACtEU,OAAO,EAAEA,CAAA,KAAML,iBAAiB,CAACI,MAAM,CAACN,EAAE,CAAE;MAAAI,QAAA,EAE3CE,MAAM,CAACL;IAAK,GAJRK,MAAM,CAACN,EAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKR,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CA3BIF,WAAuC;AAAAkB,EAAA,GAAvClB,WAAuC;AA6B7C,eAAeA,WAAW;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}