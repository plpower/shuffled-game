{"ast":null,"code":"var _jsxFileName = \"/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/checkGuess/checkGuessButtons.tsx\";\nimport React from \"react\";\nimport \"./checkGuessButtons.css\"; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NytButtonGroup = ({\n  guess,\n  setIsCorrect,\n  strikes,\n  setStrikes,\n  correctPsns,\n  setCorrectPsns,\n  displayVowels,\n  displayConsonants,\n  setDisplayVowels,\n  setDisplayConsonants,\n  selectedCButton,\n  setSelectedCButton,\n  selectedVButton,\n  setSelectedVButton\n}) => {\n  function moveItemToTop(position) {\n    if (position > 0 && position <= displayVowels.length) {\n      const newVArray = displayVowels.filter((item, index) => item.originalPosition !== position);\n      const movedVowel = displayVowels.find(obj => obj.originalPosition === position);\n      const newCArray = displayConsonants.filter((item, index) => index !== position);\n      const movedConsonant = displayConsonants.find(obj => obj.originalPosition === position);\n      console.log(movedConsonant, movedVowel);\n      console.log(newCArray, newVArray);\n      if (movedVowel && movedConsonant) {\n        // Insert the moved item at the beginning of the array\n        newVArray.unshift(movedVowel);\n        newCArray.unshift(movedConsonant);\n        setDisplayVowels(newVArray);\n        setDisplayConsonants(newCArray);\n      }\n    }\n  }\n  const onCheck = () => {\n    if (guess.v === guess.c) {\n      setIsCorrect(true);\n      setCorrectPsns([...correctPsns, guess.v]);\n      moveItemToTop(guess.v); //   moveItemToTop;\n      setSelectedVButton(0);\n      setSelectedCButton(0);\n    } else {\n      if (strikes.find(obj => obj.v === guess.v && obj.c === guess.c)) {\n        console.log(\"Already guessed!\");\n        setSelectedVButton(0);\n        setSelectedCButton(0);\n      } else {\n        setStrikes([...strikes, {\n          v: guess.v,\n          c: guess.c\n        }]);\n        setSelectedVButton(0);\n        setSelectedCButton(0);\n      }\n    }\n  };\n  const onClear = () => {\n    console.log(selectedCButton, selectedVButton);\n    setSelectedVButton(0);\n    setSelectedCButton(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nyt-button-group-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nyt-button nyt-button-check\",\n      onClick: onCheck,\n      children: \"Check\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"nyt-button nyt-button-clear\",\n      onClick: onClear,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_c = NytButtonGroup;\nexport default NytButtonGroup;\nvar _c;\n$RefreshReg$(_c, \"NytButtonGroup\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","NytButtonGroup","guess","setIsCorrect","strikes","setStrikes","correctPsns","setCorrectPsns","displayVowels","displayConsonants","setDisplayVowels","setDisplayConsonants","selectedCButton","setSelectedCButton","selectedVButton","setSelectedVButton","moveItemToTop","position","length","newVArray","filter","item","index","originalPosition","movedVowel","find","obj","newCArray","movedConsonant","console","log","unshift","onCheck","v","c","onClear","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/checkGuess/checkGuessButtons.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction } from \"react\";\nimport \"./checkGuessButtons.css\"; // Import your CSS file for styling\nimport { Guess } from \"../../game-engine/Guess\";\nimport { WordWithPosition } from \"../../game-engine/shuffleObject\";\n\ninterface NytButtonGroupProps {\n  words: string[];\n  guess: Guess;\n  strikes: Guess[];\n  idx: number;\n  setIsCorrect: Dispatch<SetStateAction<boolean>>;\n  setStrikes: Dispatch<SetStateAction<Guess[]>>;\n  correctPsns: number[];\n  setCorrectPsns: Dispatch<SetStateAction<number[]>>;\n  displayVowels: WordWithPosition[];\n  displayConsonants: WordWithPosition[];\n  setDisplayVowels: Dispatch<SetStateAction<WordWithPosition[]>>;\n  setDisplayConsonants: Dispatch<SetStateAction<WordWithPosition[]>>;\n  selectedCButton: number;\n  setSelectedCButton: Dispatch<SetStateAction<number>>;\n  selectedVButton: number;\n  setSelectedVButton: Dispatch<SetStateAction<number>>;\n}\n\nconst NytButtonGroup: React.FC<NytButtonGroupProps> = ({\n  guess,\n  setIsCorrect,\n  strikes,\n  setStrikes,\n  correctPsns,\n  setCorrectPsns,\n  displayVowels,\n  displayConsonants,\n  setDisplayVowels,\n  setDisplayConsonants,\n  selectedCButton,\n  setSelectedCButton,\n  selectedVButton,\n  setSelectedVButton,\n}) => {\n  function moveItemToTop(position: number): void {\n    if (position > 0 && position <= displayVowels.length) {\n      const newVArray = displayVowels.filter(\n        (item, index) => item.originalPosition !== position\n      );\n      const movedVowel = displayVowels.find(\n        (obj) => obj.originalPosition === position\n      );\n      const newCArray = displayConsonants.filter(\n        (item, index) => index !== position\n      );\n      const movedConsonant = displayConsonants.find(\n        (obj) => obj.originalPosition === position\n      );\n\n      console.log(movedConsonant, movedVowel)\n      console.log(newCArray, newVArray)\n      if (movedVowel && movedConsonant) {\n        // Insert the moved item at the beginning of the array\n        newVArray.unshift(movedVowel);\n        newCArray.unshift(movedConsonant);\n        setDisplayVowels(newVArray);\n        setDisplayConsonants(newCArray);\n      }\n    }\n  }\n\n  const onCheck = () => {\n    if (guess.v === guess.c) {\n      setIsCorrect(true);\n      setCorrectPsns([...correctPsns, guess.v]);\n      moveItemToTop(guess.v); //   moveItemToTop;\n      setSelectedVButton(0);\n      setSelectedCButton(0);\n    } else {\n      if (strikes.find((obj) => obj.v === guess.v && obj.c === guess.c)) {\n        console.log(\"Already guessed!\");\n        setSelectedVButton(0);\n        setSelectedCButton(0);\n      } else {\n        setStrikes([...strikes, { v: guess.v, c: guess.c }]);\n        setSelectedVButton(0);\n        setSelectedCButton(0);\n      }\n    }\n  };\n\n  const onClear = () => {\n    console.log(selectedCButton, selectedVButton);\n    setSelectedVButton(0);\n    setSelectedCButton(0);\n  };\n\n  return (\n    <div className=\"nyt-button-group-container\">\n      <button className=\"nyt-button nyt-button-check\" onClick={onCheck}>\n        Check\n      </button>\n      <button className=\"nyt-button nyt-button-clear\" onClick={onClear}>\n        Clear\n      </button>\n    </div>\n  );\n};\n\nexport default NytButtonGroup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}