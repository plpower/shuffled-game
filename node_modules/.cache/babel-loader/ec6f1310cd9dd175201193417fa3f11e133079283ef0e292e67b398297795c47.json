{"ast":null,"code":"var _jsxFileName = \"/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/buttonGroup.tsx\";\nimport React from \"react\";\nimport \"./ButtonGroup.css\"; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst allColors = [\"#EF767A\", \"#456901\", \"#49BEAA\",\n//   \"#49DCB1\",\n\"#EEB868\", \"#51af6a\", \"#ff69b4\", \"#1e90ff\", \"#556b2f\"\n//   \"#ff4500\",\n];\nconst ButtonGroup = ({\n  originalWords,\n  words,\n  setGuess,\n  guess,\n  setIndex,\n  isVowel,\n  correct,\n  selectedButton,\n  setSelectedButton\n}) => {\n  const handleButtonClick = id => {\n    setSelectedButton(id === selectedButton ? 0 : id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"button-group-container\",\n    children: words.map((button, index) =>\n    /*#__PURE__*/\n    // !correct.includes(button.originalPosition) &&\n    _jsxDEV(\"button\", {\n      //   onAnimationEnd={() => setWobble(0)}\n      className: `button ${index + 1 === selectedButton ? \"selected\" : \"\"}`,\n      disabled: correct.includes(button.originalPosition),\n      style: {\n        backgroundColor: correct.includes(button.originalPosition) ? allColors[button.originalPosition] : 'none'\n      },\n      onClick: () => {\n        if (isVowel) {\n          setIndex(index);\n          setGuess({\n            ...guess,\n            v: button.originalPosition\n          });\n        } else {\n          setGuess({\n            ...guess,\n            c: button.originalPosition\n          });\n        }\n        handleButtonClick(index + 1);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: button.word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), correct.includes(button.originalPosition) && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: originalWords[button.originalPosition]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, index + 1, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_c = ButtonGroup;\nexport default ButtonGroup;\nvar _c;\n$RefreshReg$(_c, \"ButtonGroup\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","allColors","ButtonGroup","originalWords","words","setGuess","guess","setIndex","isVowel","correct","selectedButton","setSelectedButton","handleButtonClick","id","className","children","map","button","index","disabled","includes","originalPosition","style","backgroundColor","onClick","v","c","word","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/buttonGroup.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, useEffect } from \"react\";\nimport \"./ButtonGroup.css\"; // Import your CSS file for styling\nimport { Guess } from \"../game-engine/Guess\";\nimport { WordWithPosition } from \"../game-engine/shuffleObject\";\n\ninterface ButtonGroupProps {\n  originalWords: string[];\n  words: WordWithPosition[];\n  setGuess: Dispatch<SetStateAction<Guess>>;\n  guess: Guess;\n  setIndex: Dispatch<SetStateAction<number>>;\n  idx: number;\n  isVowel: boolean;\n  correct: number[];\n  selectedButton: number;\n  setSelectedButton: Dispatch<SetStateAction<number>>;\n  allColors: string[];\n}\n\nconst allColors = [\n  \"#EF767A\",\n  \"#456901\",\n  \"#49BEAA\",\n//   \"#49DCB1\",\n  \"#EEB868\",\n  \"#51af6a\",\n  \"#ff69b4\",\n  \"#1e90ff\",\n  \"#556b2f\",\n//   \"#ff4500\",\n];\n\n\nconst ButtonGroup: React.FC<ButtonGroupProps> = ({\n  originalWords,\n  words,\n  setGuess,\n  guess,\n  setIndex,\n  isVowel,\n  correct,\n  selectedButton,\n  setSelectedButton\n}) => {\n\n  const handleButtonClick = (id: number) => {\n    setSelectedButton(id === selectedButton ? 0 : id);\n  };\n\n  return (\n    <div className=\"button-group-container\">\n      {words.map((button, index) => (\n        // !correct.includes(button.originalPosition) &&\n        <button\n          key={index + 1}\n          //   onAnimationEnd={() => setWobble(0)}\n          className={`button ${index + 1 === selectedButton ? \"selected\" : \"\"}`}\n          disabled={correct.includes(button.originalPosition)}\n          style={{ backgroundColor: correct.includes(button.originalPosition) ? allColors[button.originalPosition] : 'none'}}\n          onClick={() => {\n            if (isVowel) {\n              setIndex(index);\n              setGuess({ ...guess, v: button.originalPosition });\n            } else {\n              setGuess({ ...guess, c: button.originalPosition });\n            }\n            handleButtonClick(index + 1);\n          }}\n        >\n          <p>{button.word}</p>\n          {correct.includes(button.originalPosition) && (\n            <p>{originalWords[button.originalPosition]}</p>\n          )}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n"],"mappings":";AAAA,OAAOA,KAAK,MAA+C,OAAO;AAClE,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAkB5B,MAAMC,SAAS,GAAG,CAChB,SAAS,EACT,SAAS,EACT,SAAS;AACX;AACE,SAAS,EACT,SAAS,EACT,SAAS,EACT,SAAS,EACT;AACF;AAAA,CACC;AAGD,MAAMC,WAAuC,GAAGA,CAAC;EAC/CC,aAAa;EACbC,KAAK;EACLC,QAAQ;EACRC,KAAK;EACLC,QAAQ;EACRC,OAAO;EACPC,OAAO;EACPC,cAAc;EACdC;AACF,CAAC,KAAK;EAEJ,MAAMC,iBAAiB,GAAIC,EAAU,IAAK;IACxCF,iBAAiB,CAACE,EAAE,KAAKH,cAAc,GAAG,CAAC,GAAGG,EAAE,CAAC;EACnD,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,wBAAwB;IAAAC,QAAA,EACpCX,KAAK,CAACY,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK;IAAA;IACvB;IACAlB,OAAA;MAEE;MACAc,SAAS,EAAG,UAASI,KAAK,GAAG,CAAC,KAAKR,cAAc,GAAG,UAAU,GAAG,EAAG,EAAE;MACtES,QAAQ,EAAEV,OAAO,CAACW,QAAQ,CAACH,MAAM,CAACI,gBAAgB,CAAE;MACpDC,KAAK,EAAE;QAAEC,eAAe,EAAEd,OAAO,CAACW,QAAQ,CAACH,MAAM,CAACI,gBAAgB,CAAC,GAAGpB,SAAS,CAACgB,MAAM,CAACI,gBAAgB,CAAC,GAAG;MAAM,CAAE;MACnHG,OAAO,EAAEA,CAAA,KAAM;QACb,IAAIhB,OAAO,EAAE;UACXD,QAAQ,CAACW,KAAK,CAAC;UACfb,QAAQ,CAAC;YAAE,GAAGC,KAAK;YAAEmB,CAAC,EAAER,MAAM,CAACI;UAAiB,CAAC,CAAC;QACpD,CAAC,MAAM;UACLhB,QAAQ,CAAC;YAAE,GAAGC,KAAK;YAAEoB,CAAC,EAAET,MAAM,CAACI;UAAiB,CAAC,CAAC;QACpD;QACAT,iBAAiB,CAACM,KAAK,GAAG,CAAC,CAAC;MAC9B,CAAE;MAAAH,QAAA,gBAEFf,OAAA;QAAAe,QAAA,EAAIE,MAAM,CAACU;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACnBtB,OAAO,CAACW,QAAQ,CAACH,MAAM,CAACI,gBAAgB,CAAC,iBACxCrB,OAAA;QAAAe,QAAA,EAAIZ,aAAa,CAACc,MAAM,CAACI,gBAAgB;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAC/C;IAAA,GAlBIb,KAAK,GAAG,CAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAmBR,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA5CI9B,WAAuC;AA8C7C,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}