{"ast":null,"code":"import React from\"react\";import\"./ButtonGroup.css\";// Import your CSS file for styling\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const allColors=[\"#EF767A\",//   \"#456978\",\n\"#49BEAA\",//   \"#49DCB1\",\n\"#EEB868\",\"#51af6a\",\"#ff69b4\",\"#1e90ff\",\"#556b2f\",\"#ff4559\"];const ButtonGroup=_ref=>{let{originalWords,words,setGuess,guess,setIndex,isVowel,correct,selectedButton,setSelectedButton}=_ref;const handleButtonClick=id=>{setSelectedButton(id===selectedButton?0:id);};return/*#__PURE__*/_jsx(\"div\",{className:\"button-group-container\",children:words.map((button,index)=>/*#__PURE__*/ // !correct.includes(button.originalPosition) &&\n_jsxs(\"button\",{//   onAnimationEnd={() => setWobble(0)}\nclassName:\"button \".concat(index+1===selectedButton?\"selected\":\"\"),disabled:correct.includes(button.originalPosition),style:{backgroundColor:correct.includes(button.originalPosition)?allColors[button.originalPosition]:\"none\",color:correct.includes(button.originalPosition)||index+1===selectedButton?\"white\":\"black\"},onClick:()=>{if(isVowel){setIndex(index);setGuess({...guess,v:button.originalPosition});}else{setGuess({...guess,c:button.originalPosition});}handleButtonClick(index+1);},children:[/*#__PURE__*/_jsx(\"p\",{children:button.word}),correct.includes(button.originalPosition)&&/*#__PURE__*/_jsx(\"p\",{children:originalWords[button.originalPosition]})]},index+1))});};export default ButtonGroup;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","allColors","ButtonGroup","_ref","originalWords","words","setGuess","guess","setIndex","isVowel","correct","selectedButton","setSelectedButton","handleButtonClick","id","className","children","map","button","index","concat","disabled","includes","originalPosition","style","backgroundColor","color","onClick","v","c","word"],"sources":["/Users/patricepower/Documents/GitHub/shuffled-game/my-app/src/components/buttonGroup.tsx"],"sourcesContent":["import React, { Dispatch, SetStateAction, useEffect } from \"react\";\nimport \"./ButtonGroup.css\"; // Import your CSS file for styling\nimport { Guess } from \"../game-engine/Guess\";\nimport { WordWithPosition } from \"../game-engine/shuffleObject\";\n\ninterface ButtonGroupProps {\n  originalWords: string[];\n  words: WordWithPosition[];\n  setGuess: Dispatch<SetStateAction<Guess>>;\n  guess: Guess;\n  setIndex: Dispatch<SetStateAction<number>>;\n  idx: number;\n  isVowel: boolean;\n  correct: number[];\n  selectedButton: number;\n  setSelectedButton: Dispatch<SetStateAction<number>>;\n}\n\nconst allColors = [\n  \"#EF767A\",\n//   \"#456978\",\n  \"#49BEAA\",\n//   \"#49DCB1\",\n  \"#EEB868\",\n  \"#51af6a\",\n  \"#ff69b4\",\n  \"#1e90ff\",\n  \"#556b2f\",\n  \"#ff4559\",\n];\n\n\nconst ButtonGroup: React.FC<ButtonGroupProps> = ({\n  originalWords,\n  words,\n  setGuess,\n  guess,\n  setIndex,\n  isVowel,\n  correct,\n  selectedButton,\n  setSelectedButton\n}) => {\n\n  const handleButtonClick = (id: number) => {\n    setSelectedButton(id === selectedButton ? 0 : id);\n  };\n\n  return (\n    <div className=\"button-group-container\">\n      {words.map((button, index) => (\n        // !correct.includes(button.originalPosition) &&\n        <button\n          key={index + 1}\n          //   onAnimationEnd={() => setWobble(0)}\n          className={`button ${index + 1 === selectedButton ? \"selected\" : \"\"}`}\n          disabled={correct.includes(button.originalPosition)}\n          style={{\n            backgroundColor: correct.includes(button.originalPosition)\n              ? allColors[button.originalPosition]\n              : \"none\",\n            color:\n              correct.includes(button.originalPosition) ||\n              index + 1 === selectedButton\n                ? \"white\"\n                : \"black\",\n          }}\n          onClick={() => {\n            if (isVowel) {\n              setIndex(index);\n              setGuess({ ...guess, v: button.originalPosition });\n            } else {\n              setGuess({ ...guess, c: button.originalPosition });\n            }\n            handleButtonClick(index + 1);\n          }}\n        >\n          <p>{button.word}</p>\n          {correct.includes(button.originalPosition) && (\n            <p>{originalWords[button.originalPosition]}</p>\n          )}\n        </button>\n      ))}\n    </div>\n  );\n};\n\nexport default ButtonGroup;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAA+C,OAAO,CAClE,MAAO,mBAAmB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAiB5B,KAAM,CAAAC,SAAS,CAAG,CAChB,SAAS,CACX;AACE,SAAS,CACX;AACE,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACT,SAAS,CACV,CAGD,KAAM,CAAAC,WAAuC,CAAGC,IAAA,EAU1C,IAV2C,CAC/CC,aAAa,CACbC,KAAK,CACLC,QAAQ,CACRC,KAAK,CACLC,QAAQ,CACRC,OAAO,CACPC,OAAO,CACPC,cAAc,CACdC,iBACF,CAAC,CAAAT,IAAA,CAEC,KAAM,CAAAU,iBAAiB,CAAIC,EAAU,EAAK,CACxCF,iBAAiB,CAACE,EAAE,GAAKH,cAAc,CAAG,CAAC,CAAGG,EAAE,CAAC,CACnD,CAAC,CAED,mBACEhB,IAAA,QAAKiB,SAAS,CAAC,wBAAwB,CAAAC,QAAA,CACpCX,KAAK,CAACY,GAAG,CAAC,CAACC,MAAM,CAAEC,KAAK,iBACvB;AACAnB,KAAA,WAEE;AACAe,SAAS,WAAAK,MAAA,CAAYD,KAAK,CAAG,CAAC,GAAKR,cAAc,CAAG,UAAU,CAAG,EAAE,CAAG,CACtEU,QAAQ,CAAEX,OAAO,CAACY,QAAQ,CAACJ,MAAM,CAACK,gBAAgB,CAAE,CACpDC,KAAK,CAAE,CACLC,eAAe,CAAEf,OAAO,CAACY,QAAQ,CAACJ,MAAM,CAACK,gBAAgB,CAAC,CACtDtB,SAAS,CAACiB,MAAM,CAACK,gBAAgB,CAAC,CAClC,MAAM,CACVG,KAAK,CACHhB,OAAO,CAACY,QAAQ,CAACJ,MAAM,CAACK,gBAAgB,CAAC,EACzCJ,KAAK,CAAG,CAAC,GAAKR,cAAc,CACxB,OAAO,CACP,OACR,CAAE,CACFgB,OAAO,CAAEA,CAAA,GAAM,CACb,GAAIlB,OAAO,CAAE,CACXD,QAAQ,CAACW,KAAK,CAAC,CACfb,QAAQ,CAAC,CAAE,GAAGC,KAAK,CAAEqB,CAAC,CAAEV,MAAM,CAACK,gBAAiB,CAAC,CAAC,CACpD,CAAC,IAAM,CACLjB,QAAQ,CAAC,CAAE,GAAGC,KAAK,CAAEsB,CAAC,CAAEX,MAAM,CAACK,gBAAiB,CAAC,CAAC,CACpD,CACAV,iBAAiB,CAACM,KAAK,CAAG,CAAC,CAAC,CAC9B,CAAE,CAAAH,QAAA,eAEFlB,IAAA,MAAAkB,QAAA,CAAIE,MAAM,CAACY,IAAI,CAAI,CAAC,CACnBpB,OAAO,CAACY,QAAQ,CAACJ,MAAM,CAACK,gBAAgB,CAAC,eACxCzB,IAAA,MAAAkB,QAAA,CAAIZ,aAAa,CAACc,MAAM,CAACK,gBAAgB,CAAC,CAAI,CAC/C,GA3BIJ,KAAK,CAAG,CA4BP,CACT,CAAC,CACC,CAAC,CAEV,CAAC,CAED,cAAe,CAAAjB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}